<?xml version="1.0" ?>
<launch>     
  
  <!--  **************** Visualisation GAZEBO ****************  --> 
  <arg name="base"       value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
  <arg name="battery"    value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 -->
  <arg name="stacks"     value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons -->
  <arg name="3d_sensor"  value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro -->
  <arg name="gui"        default="true"/>
  <arg name="map_file" default="willowgarage_world"/>
  <arg name="world_file"  value="$(find turtlebot_navigation)/worlds/willowgarage_world.world"/>  

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="world_name" value="$(arg world_file)"/>
  </include>
  
  <include file="$(find turtlebot_gazebo)/launch/includes/$(arg base).launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
  </include>
  
   <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

  <!-- Fake laser -->
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="/camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="/camera/depth/image_raw"/>
    <remap from="scan" to="/scan"/>
  </node>

  <!--  **************** Visualisation RVIZ****************  -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find turtlebot_stage)/rviz/robot_navigation.rviz"/>
  
  <!-- Launch the mymission code that we will use in this simulation --> 
  <node pkg="mymission" type="mymission_node" name="missions" args="-m $(find mymission)/maps/willowgarage_world_patrol.yaml" output="screen">
      <rosparam command="load" file="$(find mymission)/config/config.yaml"/> 
  </node>
  
  <node pkg="mymission" type="mission_control.py" name="mission_control" output="screen"/>

  <include file="$(find mymission)/launch/remote.launch" />
  

  <!-- Navigation -->
  <arg name="no_nav" default="false"/>  
  <group unless="$(arg no_nav)"> 
    
    <!-- Saved Map -->
    <node pkg="map_server" type="map_server" name="map_server" args="$(find mymission)/maps/$(arg map_file).yaml" output="screen"/> 
    <!-- Localization -->
    <arg name="initial_pose_x" default="0.0"/>
    <arg name="initial_pose_y" default="0.0"/>
    <arg name="initial_pose_a" default="0.0"/>
    <arg name="custom_amcl_launch_file" default="$(find turtlebot_navigation)/launch/includes/amcl/$(arg 3d_sensor)_amcl.launch.xml"/>

    <include file="$(arg custom_amcl_launch_file)">
        <arg name="scan_topic" value="scan"/>
        <arg name="use_map_topic" value="true"/>
        <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
        <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
        <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
    </include>

    <!-- Move base -->
    <include file="$(find turtlebot_navigation)/launch/includes/move_base.launch.xml"/> 
  </group>  
  

</launch>

